
FAR VISUALIZZARE L'IMMOBILE ALL'AGENTE 
CAMBIARE NOME

METTERE IL MAPPING EXCEPTION All'INIZIO DEI SERVICE
PROVARE A TRASFOMARE I SERVICE SENZA TRY...CATCH NON NECESSARI

COMMENTARE private long totalViewsNumber; private long totalVisitsNumber; private long totalOffersNumber; IN REALESTATEAGENTSTATS
AGGIUNGERE private int totalIncome; IN REALESTATEAGENTSTATS

TOGLIERE CSV/export dal JWTAuthorizationFilter
TOGLIERE PDF/export dal JWTAuthorizationFilter, e in SECURITYCONFIG
MODIFICARE ERROR STATUS CODE IN CSVSERVICE
MODIFICARE IN INGLESE I MESSAGGI DI LOG E DI HEADER IN CSVSERVICE





-- amministratore - amministratore = 1 a n bidirezionale (Vlad Mihalcea) 
-- amministratore - agente = 1 a n bidirezionale
-- agente - immobile = 1 a n bidirezionale
-- cliente - immobile = n a n (bidirezionale o unidirezionale?) scelta: bidirezionale (indifferente)
-- immobile - foto = 1 a n unidirezionale (meno efficiente, però più coerente col dominio)
-- immobile - indirizzo = 1 a 1 unidirezionale (Vlad Mihalcea) scelta: bidirezionale (meno efficiente, però più semplice da gestire con persistenza)
-- immobile - statistiche = 1 a 1 unidirezionale (Vlad Mihalcea) scelta: @Embeddable
-- agente - statistiche = 1 a 1 unidirezionale (Vlad Mihalcea) scelta: @Embeddable


CLASSE ADDRESS e ADDRESSDTO
-- Inserire nome entity
-- Trasformare houseNumber in wrapper
-- Settare length dei tipi String
-- Implementare riferimenti a altre entità
-- Inserire costruttore con parametri (uso @RequiredArgs)
-- Implementare metodo toString (non c'è bisogno in questo caso)
verificare nomi inglesi



CLASSE USER
-- Trasformarla a superclasse (tipo MappedSuperclass)
-- Attributi: id
           -- nome
           -- cognome
           -- password
-- Annotazioni: @MappedSuperclass
             -- @Data
-- Settare length dei tipi String
-- Inserire costruttore con parametri
-- Implementare metodo toString
valutare il cambiamento di username in password
verificare nomi inglesi



CLASSE CUSTOMER
-- Inserire nome entity
-- Inserire nuovo nome id tramite @AttributesOverride
-- Implementare riferimenti a altre entità
-- Inserire costruttori con parametri
-- Implementare metodi add/remove
-- Implementare metodo toString
verificare nomi inglesi



CLASSE ADMINISTRATOR
-- Inserire nome entity
-- Inserire nuovo nome id tramite @AttributesOverride
-- Settare length di attributo agencyName
-- Implementare riferimenti a altre entità
-- Inserire costruttori con parametri
-- Implementare metodi add/remove
-- Implementare metodo toString
verificare nomi inglesi



CLASSE PROPERTYAGENT
-- Cambiare nome in REALESTATEAGENT
-- Inserire nuovo nome id tramite @AttributesOverride
-- Inserire nome entity
-- Implementare riferimenti a altre entità
-- Inserire costruttore con parametri
-- Implementare metodi add/remove
-- Implementare metodo toString
verificare nomi inglesi




CLASSE PHOTO e PHOTODTO
-- Inserire nome entity
-- Implementare riferimenti a altre entità
-- Inserire costruttore con parametri
-- Implementare metodo toString
verificare nomi inglesi



CLASSE PROPERTY
-- Cambiare nome in REALESTATE
-- Inserire nome entity
-- Trasformarla a superclasse (tipo SINGLETABLE)
-- Attributi: id
           --description
           --uploadDate
           --@Embedded internalRealEstateFeatures
           --@Embedded externalRealEstateFeatures           
-- Annotazioni: @Entity
             --@Inheritance(strategy = InheritanceType.JOINED)
             --@DiscriminatorColumn(name = "type", discriminatorType = DiscriminatorType.STRING)
             --@Data
-- Settare length dei tipi String
-- Trasformare primitivi in wrapper e suddividerli nelle due classi embeddable
-- Trasformare uploadDate da Timestamp a LocalDate
-- Inserire costruttore con parametri
-- Implementare riferimenti a altre entità
-- Inserire costruttore con parametri
-- Implementare metodi add/remove
-- Implementare metodo toString
verificare nomi inglesi



CLASSE internalPropertyFeatures
-- Trasformare primitivi in wrapper
-- Aggiungere @Data e costruttori 
verificare nomi inglesi
 


CLASSE externalPropertyFeatures
-- Trasformare primitivi in wrapper
-- Aggiungere @Data e costruttori 
verificare nomi inglesi



CLASSE PROPERTYSELL
-- Cambiare nome in REALESTATEFORSALE
-- Inserire nome entity
-- @DiscriminatorValue("for sale")
-- Trasformare primitivi in wrapper
-- Trovare differenze con propertyrent
-- Inserire costruttore con parametri
-- Implementare metodo toString
verificare nomi inglesi



CLASSE PROPERTYRENT
-- Cambiare nome in REALESTATEFORRENT
-- Inserire nome entity
-- @DiscriminatorValue("for rent")
-- Trasformare primitivi in wrapper
-- Inserire costruttore con parametri
-- Implementare metodo toString
verificare nomi inglesi



CLASSE PROPERTYSTATS
-- Cambiare nome in REALESTATESTATS
-- Inserire nome entity
-- Implementare riferimenti a altre entità
-- Implementare metodo toString
-- Trovare altri attributi
verificare nomi inglesi



CLASSE VIEWPROPERTY
-- Cambiare nome in VIEWREALESTATE
-- Inserire nome entity
-- Inserire costruttore con parametri
-- Implementare riferimenti a altre entità
-- Implementare metodo toString



CLASSE VIEWPROPERTYID
-- Cambiare nome in VIEWREALESTATEID
-- Aggiungere @Data
-- Aggiungere @NoArgsConstructor
-- Aggiungere @AllArgsConstructor


AGGIUNGERE CLASSE REALESTATEAGENTSTATS
-- Numero di immobili caricati 
-- Numero di immobili attualmente in gestione
-- Numero totale visualizzazioni
-- Numero totale visite
-- Numero totale offerte
-- Totale immobili venduti                         
-- Totale immobili affittati                         
-- Valore totale vendite: La somma totale dei valori di tutti gli immobili venduti dall'agente
-- Valore totale affitti: La somma totale dei canoni annuali degli immobili affittati dall'agente.
-- Tasso di successo: La percentuale di trattative concluse con successo rispetto al numero totale di trattative avviate
-- Rapporto immobili venduti e affittati


SETTARE UN ACCESS DENIED HANDLER IN SPRING SECURITY